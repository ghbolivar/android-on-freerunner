#summary Build your own system and test out your changes.

In general the setup necessary to build Android-on-Freerunner is the same as for the main Android project. See [http://source.android.com/source/download.html the Get Android Source page] there for instructions on downloading source code and setting up your machine's build environment. *One important difference:* The AoF-specific source code is hosted at our Gitorious repository, so to checkout AoF code use the following command (not the one on the source.android.com page):
{{{
 $ repo init -u git://gitorious.org/android-on-freerunner/freerunner_platform_manifest.git -b master
}}}
The `-b` parameter on the repo command specifies the branch to check out, currently either `cupcake` or `master`.

= Setting up your system =
In general, for either Mac OS/X or Linux build machines, follow the instructions at [http://source.android.com/source/download.html the source.android.com page]. Notes on specific situations are below.

To build, do:
{{{
    $ make -j 4 TARGET_PRODUCT=freerunner
}}}

The -j parameter will try to optimise the compilation process. The number should represent the double the number of cores on your system. In this example, the source is compiled on a dual core system. If you are trying to diagnose a build error, not using the `-j` parameter may make the diagnostics easier to read.

*NOTE:* If you are building the Cupcake branch then you need to specify 'freerunner' as the TARGET_PRODUCT, if you are using a newer branch then use 'fr'

== Ubuntu Linux ==

Install the packages recommended on the Android page for Ubuntu (32 or 64 bit). Ubuntu 9.10 (Karmic Koala) and later no longer have Java 5 (which is required) in the repositories. You can either manually download and install it from the [http://java.sun.com/javase/downloads/index_jdk5.jsp Oracle page], or you can add the old repository lines to your sources.list. See [http://blog.enea.com/Blog/bid/32050/Ubuntu-9-10-Java-5-and-the-Android-Open-Source-Project this page] for instructions on the two approaches.

Also in 9.10 and later, the default GCC version has changed, so gcc-4.3, g++-4.3, liblzo2-dev and uboot-mkimage must be installed:
    {{{
    # sudo aptitude install gcc-4.3 g++-4.3 liblzo2-dev uboot-mkimage sun-java5-jdk
    }}}

Whichever of the methods above you've used to install Java 5, you need to point the Android Java variables to the correct location.  Something like:
    {{{
    $ export JAVA_HOME=<path-to-jdk1.5.0_22 >
    $ export ANDROID_JAVA_HOME=$JAVA_HOME 
    }}}

Additionally you must set the proper GCC version with environment variables:
    {{{
    $ export CC=gcc-4.3 
    $ export CXX=g++-4.3 
    }}}

In case you have multiple JREs installed, make sure to set the default to the version required for your build. To find out what JREs you have installed run the following:

    {{{
    $ sudo java-update-alternatives --list
    }}}

To set the corect JRE, type:

    {{{
    $ sudo java-update-alternatives --set [the correct JRE]
    }}}

Building with 64-bit OS seems to be more problematic. See the list of packages at the Android site, keeping in mind that you need GCC 4.3 versions of some of the listed packages (cc-4.3-multilib and g++-4.3-multilib). If you come up with a configuration that works, please post it to the mailing list. On the other hand, if you are having problems fell free to ask for help!

----
_Send your comments to [mailto:android-on-freerunner@googlegroups.com the mailing list]_