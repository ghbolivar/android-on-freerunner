#summary Build your own system and test out your changes.

== ARM Toolchain ==
The Freerunner uses an ARM processor. Chances are your host machine doesn't. That means if you you are going to build code designed to run on it you need to set up an environment that enables that on your host machine.

That's where things get complicated! There are different ways to achieve a suitable build environment and there are lots of host machine operating systems and processors. 

== Source code ==
Install repo and download the source code following instructions on [http://code.google.com/p/android-on-freerunner/wiki/ImproveIt the wiki ImproveIt page.] Make sure to use the repo links for the AoF project.


=== Setting up your system ===
The information on how to configure your 32-bit or 64-bit x86 system or your Mac OS system can be found on the main Google Android project page [http://source.android.com/download here.] These set ups are based on running Java 5.

== Ubuntu 10.04 ==

Ubuntu 10.04 has several issues regarding compiling android. Especially 64-bit seems to have problems. g++-4.3-multilib is one package that is needed, a seperate install of jdk is also needed. I installed it in my home and pointed the JAVA_HOME variables accordingly. I have not yet been able to compile the complete source will continue here when I'm succefull.

//larlin

== Ubuntu 64-bit x86 ==

If you followed the [http://source.android.com/download instructions] for Ubuntu 64-bit x86 systems, you're already 90% done.

Now verify if you have package fakeroot installed. If not, install it by doing:
{{{
$ sudo apt-get install fakeroot
}}}

As per the instructions [http://source.android.com/download here], you've installed JDK 1.5 while you might already have JDK 1.6 installed. To make sure the make process uses the correct version, point your variable to the correct location (typically /usr/lib/jvm/java-1.5.0-sun):

{{{
    $ export JAVA_HOME=<path-to-java-1.5.0-sun>
    $ export ANDROID_JAVA_HOME=$JAVA_HOME 
}}}

Now you're ready to compile. 

{{{
    $ make -j 4 TARGET_PRODUCT=freerunner
}}}

The -j parameter will try to optimise the compilation process. The number should represent the double of the amount of cores on your system. In this example, the source is compiled on a dual core system.

*NOTE:* If you are building the Cupcake branch then you need to specify 'freerunner' as the TARGET_PRODUCT, if you are using a newer branch then use 'fr'

== Karmic ==

Karmic users can install sun-java5-jdk by adding the following lines to /etc/apt/sources.list:
    {{{
    deb http://us.archive.ubuntu.com/ubuntu/ dapper main restricted
    deb http://us.archive.ubuntu.com/ubuntu/ dapper universe multiverse
    }}}

In addition gcc-4.3, g++-4.3, liblzo2-dev and uboot-mkimage are needed:
    {{{
    # sudo aptitude install gcc-4.3 g++-4.3 liblzo2-dev uboot-mkimage sun-java5-jdk
    }}}

You need to have sun-java5-jdk installed, as noted above, and you need to point the Android Java variables to the correct location.  Something like:
    {{{
    $ export JAVA_HOME=<path-to-jdk1.5.0_22 >
    $ export ANDROID_JAVA_HOME=$JAVA_HOME 
    }}}

Set your environment variables:
    {{{
    $ export CC=gcc-4.3 
    $ export CXX=g++-4.3 
    }}}

And go:
    {{{
    $ make -j 4 TARGET_PRODUCT=fr
    }}}
----
_Send your comments to [mailto:android-on-freerunner@googlegroups.com the mailing list]_